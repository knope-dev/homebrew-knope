name: Build and test
on:
  pull_request:
jobs:
  check-for-label:
    runs-on: ubuntu-latest
    outputs:
      has-label: ${{ steps.check-for-label.outputs.has-label }}
    steps:
      - name: Check for label
        id: check-for-label
        run: |
          LENGTH=$(gh pr view ${{ github.event.number }} --repo knope-dev/homebrew-tap --json labels --jq '.labels[] | select(.name = "release") | length')
          if [ -z "$LENGTH" ]; then
              echo "has-label=false" >> "$GITHUB_OUTPUT"
          else
              echo "has-label=true" >> "$GITHUB_OUTPUT"
          fi
        env:
          GH_TOKEN: ${{ secrets.PAT }}

  test-formula-and-build-bottles:
    needs:
      - check-for-label
    if: needs.check-for-label.outputs.has-label == 'true'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - run: brew test-bot --only-cleanup-before

      - run: brew test-bot --only-setup

      - run: brew test-bot --only-tap-syntax

      - run: brew test-bot --only-formulae
        if: github.event_name == 'pull_request'

      - name: Upload bottles as artifact
        if: always() && github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: bottles
          path: '*.bottle.*'

  trigger-publish: # Publish has to be in a different workflow, so we trigger it here
    needs: test-formula-and-build-bottles
    runs-on: ubuntu-latest
    steps:
      - name: Trigger publish
        run: gh workflow run Publish --repo knope-dev/homebrew-tap -f pull_request_number=${{ github.event.number }}
        env:
          GH_TOKEN: ${{ secrets.PAT }}
